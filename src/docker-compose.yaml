version: '3.7'

volumes:
  postgres_volume:
  es_volume:
  redis_volume:
  static_volume:
  media_volume:

services:
  db_postgres:
    image: postgres:13.3-alpine
    container_name: db_postgres
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    restart: always
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  db_redis:
    image: 'redis:6.2.6'
    container_name: db_redis
    volumes:
      - redis_volume:/usr/local/etc/redis/redis.conf
    env_file:
      - ./.env
    expose:
      - ${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  db_elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: db_elastic
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_volume:/usr/share/elasticsearch/data
    expose:
      - ${ELASTIC_PORT}
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:${ELASTIC_PORT}/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  es_init:
    image: curlimages/curl:7.79.1
    container_name: es_init
    entrypoint: ["sh", "/home/curl_user/curl_entrypoint.sh"]
    env_file:
      - ./.env
    volumes:
      - ./db/es_schemes/schemas_film.json:/home/curl_user/schemas_film.json
      - ./db/es_schemes/schemas_genre.json:/home/curl_user/schemas_genre.json
      - ./db/es_schemes/schemas_person.json:/home/curl_user/schemas_person.json
      - ./curl_entrypoint.sh:/home/curl_user/curl_entrypoint.sh
    depends_on:
      db_elastic:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  fastapi_app:
    build: .
    container_name: fastapi_app
    restart: always
    expose:
      - 8080
    depends_on:
      db_elastic:
        condition: service_healthy
      db_redis:
        condition: service_healthy
    env_file:
      - ./.env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  django_app:
    image: "vardeath/django_movies:v1.1"
    container_name: django_app
    restart: always
    expose:
      - 8000
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/
    depends_on:
      db_postgres:
        condition: service_healthy
    env_file:
      - ./.env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  etl_process:
    image: "vardeath/etl:v1.0"
    container_name: etl_process
    env_file:
      - ./.env
    restart: always
    command: python etl_loop.py
    depends_on:
      - django_app
      - fastapi_app
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  nginx:
    image: nginx:1.19.5-alpine
    container_name: nginx
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/
      - ./scripts/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "80:80"
    env_file:
      - ./.env
    depends_on:
      - django_app
      - fastapi_app